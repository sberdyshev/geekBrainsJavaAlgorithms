plugins {
    id 'java'
    id "org.sonarqube" version "2.7"
    id "jacoco"
}

group 'geekbrains.java.algorithms'
version '1.0'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.3"
}

sonarqube {
    properties {
        property "sonar.jacoco.reportPath", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
    // https://mvnrepository.com/artifact/org.assertj/assertj-core
    testCompile group: 'org.assertj', name: 'assertj-core', version: '1.0.0'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-core
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'


}

test {
    useJUnitPlatform()
    include 'ru/**'
    failFast = true
    maxHeapSize = '1G'
    finalizedBy jacocoTestReport
}

classes.dependsOn(clean)

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.enabled true
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }

        rule {
            enabled = true
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}
